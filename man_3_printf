.TH _PRINTF 3 "November 27, 2024" "Version 1.0" "User Commands"

.SH NAME
_printf \- formatted output conversion

.SH SYNOPSIS
.B #include "main.h"
.PP
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The 
.B _printf()
function produces output according to a 
.I format
string. The function writes output to 
.I stdout
, the standard output stream.

.PP
This function writes the output under the control of a 
.I format
string that specifies how subsequent arguments are converted for output.

.SH FORMAT OF THE FORMAT STRING
The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.

.PP
Each conversion specification is introduced by the character 
.B %
and ends with a 
.I conversion specifier
. In between there may be (in this order) zero or more 
.I flags
, an optional minimum 
.I field width
, an optional 
.I precision
 and an optional 
.I length modifier
.

.PP
The arguments must correspond properly with the conversion specifier. By default, the arguments are used in the order given, where each '*' and each conversion specifier asks for the next argument (and it is an error if insufficiently many arguments are given).

.SH CONVERSION SPECIFIERS
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:

.TP
.B c
The int argument is converted to an unsigned char, and the resulting character is written.

.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte ('\0').

.TP
.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%'.

.SH RETURN VALUE
Upon successful return, this function returns the number of characters printed (excluding the null byte used to end output to strings).

If an output error is encountered, a negative value is returned.

.SH EXAMPLES
To print a string and a character:
.PP
.nf
.RS
_printf("Hello %s! This is a %c\\n", "World", 'C');
.RE
.fi

.SH SEE ALSO
printf(3), putchar(3)

.SH BUGS
No known bugs.

.SH AUTHOR
Rayane Allaoui and Ardonit Musliu

.SH COPYRIGHT
Copyright Â© 2024 Your Organization. License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.